# generated by gen_sla.py

sbp: [scaled] is sb [ scaled=sb*8; ] { export *:8 scaled; }
scp: [scaled] is sc [ scaled=sc*8; ] { export *:8 scaled; }
sdp: [scaled] is sd [ scaled=sd*8; ] { export *:8 scaled; }
sbr: [SP + scaled] is sb & SP [ scaled=sb*8; ] { local out:8 = SP + scaled; export *:8 out; }
scr: [SP + scaled] is sc & SP [ scaled=sc*8; ] { local out:8 = SP + scaled; export *:8 out; }
sdr: [SP + scaled] is sd & SP [ scaled=sd*8; ] { local out:8 = SP + scaled; export *:8 out; }
sbi: "#"^sb is sb { local out:8 = sb; export out; }
sci: "#"^sc is sc { local out:8 = sc; export out; }
obp: sbp*8 is sb & sbp { local out:8 = sbp*8; export out; }
obr: sbr*8 is sb & sbr { local out:8 = sbr*8; export out; }
obi: "#"^scaled is sb [ scaled=sb*8; ] { local out:8 = scaled; export out; }
ocp: scp*8 is sc & scp { local out:8 = scp*8; export out; }
ocr: scr*8 is sc & scr { local out:8 = scr*8; export out; }
oci: "#"^scaled is sc [ scaled=sc*8; ] { local out:8 = scaled; export out; }
jcp: scaled is sc [ scaled=sc*8; ] { export *:8 scaled; }

:add sbp, scp, sdp is op=00001 & sign=0; sbp; scp; sdp { sdp = sbp + scp; }
:add sbp, scp, sdr is op=20001 & sign=0; sbp; scp; sdr { sdr = sbp + scp; }
:add sbp, scr, sdp is op=02001 & sign=0; sbp; scr; sdp { sdp = sbp + scr; }
:add sbp, scr, sdr is op=22001 & sign=0; sbp; scr; sdr { sdr = sbp + scr; }
:add sbp, sci, sdp is op=01001 & sign=0; sbp; sci; sdp { sdp = sbp + sci; }
:add sbp, sci, sdr is op=21001 & sign=0; sbp; sci; sdr { sdr = sbp + sci; }
:add sbr, scp, sdp is op=00201 & sign=0; sbr; scp; sdp { sdp = sbr + scp; }
:add sbr, scp, sdr is op=20201 & sign=0; sbr; scp; sdr { sdr = sbr + scp; }
:add sbr, scr, sdp is op=02201 & sign=0; sbr; scr; sdp { sdp = sbr + scr; }
:add sbr, scr, sdr is op=22201 & sign=0; sbr; scr; sdr { sdr = sbr + scr; }
:add sbr, sci, sdp is op=01201 & sign=0; sbr; sci; sdp { sdp = sbr + sci; }
:add sbr, sci, sdr is op=21201 & sign=0; sbr; sci; sdr { sdr = sbr + sci; }
:add sbi, scp, sdp is op=00101 & sign=0; sbi; scp; sdp { sdp = sbi + scp; }
:add sbi, scp, sdr is op=20101 & sign=0; sbi; scp; sdr { sdr = sbi + scp; }
:add sbi, scr, sdp is op=02101 & sign=0; sbi; scr; sdp { sdp = sbi + scr; }
:add sbi, scr, sdr is op=22101 & sign=0; sbi; scr; sdr { sdr = sbi + scr; }
:add sbi, sci, sdp is op=01101 & sign=0; sbi; sci; sdp { sdp = sbi + sci; }
:add sbi, sci, sdr is op=21101 & sign=0; sbi; sci; sdr { sdr = sbi + sci; }
:mul sbp, scp, sdp is op=00002 & sign=0; sbp; scp; sdp { sdp = sbp * scp; }
:mul sbp, scp, sdr is op=20002 & sign=0; sbp; scp; sdr { sdr = sbp * scp; }
:mul sbp, scr, sdp is op=02002 & sign=0; sbp; scr; sdp { sdp = sbp * scr; }
:mul sbp, scr, sdr is op=22002 & sign=0; sbp; scr; sdr { sdr = sbp * scr; }
:mul sbp, sci, sdp is op=01002 & sign=0; sbp; sci; sdp { sdp = sbp * sci; }
:mul sbp, sci, sdr is op=21002 & sign=0; sbp; sci; sdr { sdr = sbp * sci; }
:mul sbr, scp, sdp is op=00202 & sign=0; sbr; scp; sdp { sdp = sbr * scp; }
:mul sbr, scp, sdr is op=20202 & sign=0; sbr; scp; sdr { sdr = sbr * scp; }
:mul sbr, scr, sdp is op=02202 & sign=0; sbr; scr; sdp { sdp = sbr * scr; }
:mul sbr, scr, sdr is op=22202 & sign=0; sbr; scr; sdr { sdr = sbr * scr; }
:mul sbr, sci, sdp is op=01202 & sign=0; sbr; sci; sdp { sdp = sbr * sci; }
:mul sbr, sci, sdr is op=21202 & sign=0; sbr; sci; sdr { sdr = sbr * sci; }
:mul sbi, scp, sdp is op=00102 & sign=0; sbi; scp; sdp { sdp = sbi * scp; }
:mul sbi, scp, sdr is op=20102 & sign=0; sbi; scp; sdr { sdr = sbi * scp; }
:mul sbi, scr, sdp is op=02102 & sign=0; sbi; scr; sdp { sdp = sbi * scr; }
:mul sbi, scr, sdr is op=22102 & sign=0; sbi; scr; sdr { sdr = sbi * scr; }
:mul sbi, sci, sdp is op=01102 & sign=0; sbi; sci; sdp { sdp = sbi * sci; }
:mul sbi, sci, sdr is op=21102 & sign=0; sbi; sci; sdr { sdr = sbi * sci; }
:input  sbp is op=003 & sign=0; sbp { sbp = input(); }
:input  sbr is op=203 & sign=0; sbr { sbr = input(); }
:output sbp is op=004 & sign=0; sbp { output(sbp); }
:output sbr is op=204 & sign=0; sbr { output(sbr); }
:output sbi is op=104 & sign=0; sbi { output(sbi); }
:jump_if_true  sbp, ocp is op=0005 & sign=0; sbp; ocp { if (sbp == 0) goto inst_next; goto [ocp]; }
:jump_if_true  sbp, ocr is op=2005 & sign=0; sbp; ocr { if (sbp == 0) goto inst_next; goto [ocr]; }
:jump_if_true  sbr, ocp is op=0205 & sign=0; sbr; ocp { if (sbr == 0) goto inst_next; goto [ocp]; }
:jump_if_true  sbr, ocr is op=2205 & sign=0; sbr; ocr { if (sbr == 0) goto inst_next; goto [ocr]; }
:jump_if_true  sbi, ocp is op=0105 & sign=0; sbi; ocp { if (sbi == 0) goto inst_next; goto [ocp]; }
:jump_if_true  sbi, ocr is op=2105 & sign=0; sbi; ocr { if (sbi == 0) goto inst_next; goto [ocr]; }
:jump_if_false sbp, ocp is op=0006 & sign=0; sbp; ocp { if (sbp != 0) goto inst_next; goto [ocp]; }
:jump_if_false sbp, ocr is op=2006 & sign=0; sbp; ocr { if (sbp != 0) goto inst_next; goto [ocr]; }
:jump_if_false sbr, ocp is op=0206 & sign=0; sbr; ocp { if (sbr != 0) goto inst_next; goto [ocp]; }
:jump_if_false sbr, ocr is op=2206 & sign=0; sbr; ocr { if (sbr != 0) goto inst_next; goto [ocr]; }
:jump_if_false sbi, ocp is op=0106 & sign=0; sbi; ocp { if (sbi != 0) goto inst_next; goto [ocp]; }
:jump_if_false sbi, ocr is op=2106 & sign=0; sbi; ocr { if (sbi != 0) goto inst_next; goto [ocr]; }
:less_than sbp, scp, sdp is op=00007 & sign=0; sbp; scp; sdp { sdp = sext(sbp s< scp); }
:less_than sbp, scp, sdr is op=20007 & sign=0; sbp; scp; sdr { sdr = sext(sbp s< scp); }
:less_than sbp, scr, sdp is op=02007 & sign=0; sbp; scr; sdp { sdp = sext(sbp s< scr); }
:less_than sbp, scr, sdr is op=22007 & sign=0; sbp; scr; sdr { sdr = sext(sbp s< scr); }
:less_than sbp, sci, sdp is op=01007 & sign=0; sbp; sci; sdp { sdp = sext(sbp s< sci); }
:less_than sbp, sci, sdr is op=21007 & sign=0; sbp; sci; sdr { sdr = sext(sbp s< sci); }
:less_than sbr, scp, sdp is op=00207 & sign=0; sbr; scp; sdp { sdp = sext(sbr s< scp); }
:less_than sbr, scp, sdr is op=20207 & sign=0; sbr; scp; sdr { sdr = sext(sbr s< scp); }
:less_than sbr, scr, sdp is op=02207 & sign=0; sbr; scr; sdp { sdp = sext(sbr s< scr); }
:less_than sbr, scr, sdr is op=22207 & sign=0; sbr; scr; sdr { sdr = sext(sbr s< scr); }
:less_than sbr, sci, sdp is op=01207 & sign=0; sbr; sci; sdp { sdp = sext(sbr s< sci); }
:less_than sbr, sci, sdr is op=21207 & sign=0; sbr; sci; sdr { sdr = sext(sbr s< sci); }
:less_than sbi, scp, sdp is op=00107 & sign=0; sbi; scp; sdp { sdp = sext(sbi s< scp); }
:less_than sbi, scp, sdr is op=20107 & sign=0; sbi; scp; sdr { sdr = sext(sbi s< scp); }
:less_than sbi, scr, sdp is op=02107 & sign=0; sbi; scr; sdp { sdp = sext(sbi s< scr); }
:less_than sbi, scr, sdr is op=22107 & sign=0; sbi; scr; sdr { sdr = sext(sbi s< scr); }
:less_than sbi, sci, sdp is op=01107 & sign=0; sbi; sci; sdp { sdp = sext(sbi s< sci); }
:less_than sbi, sci, sdr is op=21107 & sign=0; sbi; sci; sdr { sdr = sext(sbi s< sci); }
:equals    sbp, scp, sdp is op=00008 & sign=0; sbp; scp; sdp { sdp = sext(sbp == scp); }
:equals    sbp, scp, sdr is op=20008 & sign=0; sbp; scp; sdr { sdr = sext(sbp == scp); }
:equals    sbp, scr, sdp is op=02008 & sign=0; sbp; scr; sdp { sdp = sext(sbp == scr); }
:equals    sbp, scr, sdr is op=22008 & sign=0; sbp; scr; sdr { sdr = sext(sbp == scr); }
:equals    sbp, sci, sdp is op=01008 & sign=0; sbp; sci; sdp { sdp = sext(sbp == sci); }
:equals    sbp, sci, sdr is op=21008 & sign=0; sbp; sci; sdr { sdr = sext(sbp == sci); }
:equals    sbr, scp, sdp is op=00208 & sign=0; sbr; scp; sdp { sdp = sext(sbr == scp); }
:equals    sbr, scp, sdr is op=20208 & sign=0; sbr; scp; sdr { sdr = sext(sbr == scp); }
:equals    sbr, scr, sdp is op=02208 & sign=0; sbr; scr; sdp { sdp = sext(sbr == scr); }
:equals    sbr, scr, sdr is op=22208 & sign=0; sbr; scr; sdr { sdr = sext(sbr == scr); }
:equals    sbr, sci, sdp is op=01208 & sign=0; sbr; sci; sdp { sdp = sext(sbr == sci); }
:equals    sbr, sci, sdr is op=21208 & sign=0; sbr; sci; sdr { sdr = sext(sbr == sci); }
:equals    sbi, scp, sdp is op=00108 & sign=0; sbi; scp; sdp { sdp = sext(sbi == scp); }
:equals    sbi, scp, sdr is op=20108 & sign=0; sbi; scp; sdr { sdr = sext(sbi == scp); }
:equals    sbi, scr, sdp is op=02108 & sign=0; sbi; scr; sdp { sdp = sext(sbi == scr); }
:equals    sbi, scr, sdr is op=22108 & sign=0; sbi; scr; sdr { sdr = sext(sbi == scr); }
:equals    sbi, sci, sdp is op=01108 & sign=0; sbi; sci; sdp { sdp = sext(sbi == sci); }
:equals    sbi, sci, sdr is op=21108 & sign=0; sbi; sci; sdr { sdr = sext(sbi == sci); }
:offset obp is op=009 & sign=0; obp { SP = SP + obp; }
:offset obr is op=209 & sign=0; obr { SP = SP + obr; }
:offset obi is op=109 & sign=0; obi { SP = SP + obi; }
:halt is op=99 & sign=0 { halt(); goto inst_start; }
:jump_if_true  sbp, jcp is op=1005 & sign=0; sbp; jcp { if (sbp != 0) goto jcp; }
:jump_if_true  sbr, jcp is op=1205 & sign=0; sbr; jcp { if (sbr != 0) goto jcp; }
:jump_if_true  sbi, jcp is op=1105 & sign=0; sbi; jcp { if (sbi != 0) goto jcp; }
:jump_if_false sbp, jcp is op=1006 & sign=0; sbp; jcp { if (sbp == 0) goto jcp; }
:jump_if_false sbr, jcp is op=1206 & sign=0; sbr; jcp { if (sbr == 0) goto jcp; }
:jump_if_false sbi, jcp is op=1106 & sign=0; sbi; jcp { if (sbi == 0) goto jcp; }
